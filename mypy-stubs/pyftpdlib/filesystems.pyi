import os
from collections.abc import Generator

from typing import (
    IO,
)

from .handlers import FTPHandler

__all__ = ["AbstractedFS", "FilesystemError", "UnixFilesystem"]

class FilesystemError(Exception): ...

class AbstractedFS:
    cmd_channel: FTPHandler
    def __init__(self, root: str, cmd_channel: FTPHandler) -> None: ...
    @property
    def root(self) -> str: ...
    @root.setter
    def root(self, path: str) -> None: ...
    @property
    def cwd(self) -> str: ...
    @cwd.setter
    def cwd(self, path: str) -> None: ...
    def ftpnorm(self, ftppath: str) -> str: ...
    def ftp2fs(self, ftppath: str) -> str: ...
    def fs2ftp(self, fspath: str) -> str: ...
    def validpath(self, path: str) -> bool: ...
    def open(self, filename: str, mode: str) -> IO[bytes]: ...

    class FileWrapper:
        file: IO[bytes]
        name: str

    def mkstemp(
        self,
        suffix: str = "",
        prefix: str = "",
        dir: str | None = None,
        mode: str = "wb",
    ) -> AbstractedFS.FileWrapper: ...
    def chdir(self, path: str) -> None: ...
    def mkdir(self, path: str) -> None: ...
    def listdir(self, path: str) -> list[str]: ...
    def listdirinfo(self, path: str) -> list[str]: ...
    def rmdir(self, path: str) -> None: ...
    def remove(self, path: str) -> None: ...
    def rename(self, src: str, dst: str) -> None: ...
    def chmod(self, path: str, mode: int) -> None: ...
    def stat(self, path: str) -> os.stat_result: ...
    def utime(self, path: str, timeval: int | float) -> None: ...
    def lstat(self, path: str) -> os.stat_result: ...
    def readlink(self, path: str) -> str: ...
    def isfile(self, path: str) -> bool: ...
    def islink(self, path: str) -> bool: ...
    def isdir(self, path: str) -> bool: ...
    def getsize(self, path: str) -> int: ...
    def getmtime(self, path: str) -> float: ...
    def realpath(self, path: str) -> str: ...
    def lexists(self, path: str) -> bool: ...
    def get_user_by_uid(self, uid: int | str) -> str: ...
    def get_group_by_gid(self, gid: int | str) -> str: ...
    def format_list(
        self, basedir: str, listing: list[str], ignore_err: bool = True
    ) -> Generator[str, None, str]: ...
    def format_mlsx(
        self,
        basedir: str,
        listing: list[str],
        perms: str,
        facts: str,
        ignore_err: bool = True,
    ) -> Generator[str]: ...

class UnixFilesystem(AbstractedFS):
    cwd: str
    def __init__(self, root: str, cmd_channel: FTPHandler) -> None: ...
    def ftp2fs(self, ftppath: str) -> str: ...
    def fs2ftp(self, fspath: str) -> str: ...
    def validpath(self, path: str) -> bool: ...
